<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://goodboychan.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://goodboychan.github.io/" rel="alternate" type="text/html" /><updated>2024-01-09T22:09:13-06:00</updated><id>https://goodboychan.github.io/feed.xml</id><title type="html">Chan`s Jupyter</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Logistic Regression with a Neural Network mindset</title><link href="https://goodboychan.github.io/python/coursera/deeplearning.ai/2022/05/11/01-Logistic-Regression-with-a-Neural-Network.html" rel="alternate" type="text/html" title="Logistic Regression with a Neural Network mindset" /><published>2022-05-11T00:00:00-05:00</published><updated>2022-05-11T00:00:00-05:00</updated><id>https://goodboychan.github.io/python/coursera/deeplearning.ai/2022/05/11/01-Logistic-Regression-with-a-Neural-Network</id><author><name>Chanseok Kang</name></author><category term="Python" /><category term="Coursera" /><category term="DeepLearning.AI" /><summary type="html"><![CDATA[In this post, we will build a logistic regression classifier to recognize cats. This is the summary of lecture "Neural Networks and Deep Learning" from DeepLearning.AI. (slightly modified from original assignment)]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://goodboychan.github.io/images/LogReg_kiank.png" /><media:content medium="image" url="https://goodboychan.github.io/images/LogReg_kiank.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Custom Layers in Tensorflow 2</title><link href="https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/08/02-Tensorflow2-Custom-Layers.html" rel="alternate" type="text/html" title="Custom Layers in Tensorflow 2" /><published>2022-02-08T00:00:00-06:00</published><updated>2022-02-08T00:00:00-06:00</updated><id>https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/08/02-Tensorflow2-Custom-Layers</id><author><name>Chanseok Kang</name></author><category term="Python" /><category term="Coursera" /><category term="Tensorflow" /><category term="DeepLearning.AI" /><summary type="html"><![CDATA[Custom layers give you the flexibility to implement models that use non-standard layers. In this post, we will practice uilding off of existing standard layers to create custom layers for your models. This is the summary of lecture "Custom Models, Layers and Loss functions with Tensorflow" from DeepLearning.AI.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://goodboychan.github.io/images/model_simpleQuadratic.png" /><media:content medium="image" url="https://goodboychan.github.io/images/model_simpleQuadratic.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Custom Loss Function in Tensorflow 2.</title><link href="https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/08/01-Tensorflow2-Custom-Loss-Function.html" rel="alternate" type="text/html" title="Custom Loss Function in Tensorflow 2." /><published>2022-02-08T00:00:00-06:00</published><updated>2022-02-08T00:00:00-06:00</updated><id>https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/08/01-Tensorflow2-Custom-Loss-Function</id><author><name>Chanseok Kang</name></author><category term="Python" /><category term="Coursera" /><category term="Tensorflow" /><category term="DeepLearning.AI" /><summary type="html"><![CDATA[In this post, we will learn how to build custom loss functions with function and class. This is the summary of lecture "Custom Models, Layers and Loss functions with Tensorflow" from DeepLearning.AI.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://goodboychan.github.io/images/huber_loss_ex.png" /><media:content medium="image" url="https://goodboychan.github.io/images/huber_loss_ex.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Practice with the Tensorflow 2 Functional API.</title><link href="https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/05/01-Tensorflow2-Functional-API.html" rel="alternate" type="text/html" title="Practice with the Tensorflow 2 Functional API." /><published>2022-02-05T00:00:00-06:00</published><updated>2022-02-05T00:00:00-06:00</updated><id>https://goodboychan.github.io/python/coursera/tensorflow/deeplearning.ai/2022/02/05/01-Tensorflow2-Functional-API</id><author><name>Chanseok Kang</name></author><category term="Python" /><category term="Coursera" /><category term="Tensorflow" /><category term="DeepLearning.AI" /><summary type="html"><![CDATA[In this post, it will demonstrate how to build models with the Functional syntax. You'll build one using the Sequential API and see how you can do the same with the Functional API. Both will arrive at the same architecture and you can train and evaluate it as usual. This is the summary of lecture "Custom Models, Layers and Loss functions with Tensorflow" from DeepLearning.AI.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://goodboychan.github.io/images/fashion_mnist_siamese.png" /><media:content medium="image" url="https://goodboychan.github.io/images/fashion_mnist_siamese.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VAE for the CelebA dataset</title><link href="https://goodboychan.github.io/python/coursera/tensorflow_probability/icl/2021/09/14/03-Variational-AutoEncoder-Celeb-A.html" rel="alternate" type="text/html" title="VAE for the CelebA dataset" /><published>2021-09-14T00:00:00-05:00</published><updated>2021-09-14T00:00:00-05:00</updated><id>https://goodboychan.github.io/python/coursera/tensorflow_probability/icl/2021/09/14/03-Variational-AutoEncoder-Celeb-A</id><author><name>Chanseok Kang</name></author><category term="Python" /><category term="Coursera" /><category term="Tensorflow_probability" /><category term="ICL" /><summary type="html"><![CDATA[In this post, we will implement the variational AutoEncoder (VAE) for an image dataset of celebrity faces. This is the Programming Assignment of lecture "Probabilistic Deep Learning with Tensorflow 2" from Imperial College London.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://goodboychan.github.io/images/celeba-reconstruct.png" /><media:content medium="image" url="https://goodboychan.github.io/images/celeba-reconstruct.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>